generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_in        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  clubs         Club[]    @relation("ClubToUser")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Club {
  id       String    @id @unique @default(cuid())
  name     String
  slug     String    @unique
  secret   String
  members  Member[]
  projects Project[]
  users    User[]    @relation("ClubToUser")
}

model Member {
  id          Int          @id @default(autoincrement())
  name        String
  clubId      String
  club        Club         @relation(fields: [clubId], references: [id])
  submissions Submission[]
  attendance  DateTime[]
}

model Project {
  id          String       @id @default(cuid())
  title       String
  content     String?
  clubSlug    String
  club        Club         @relation(fields: [clubSlug], references: [slug])
  submissions Submission[]
}

// currently only links available
model Submission {
  id        String   @id @default(cuid())
  title     String
  link      String
  createdAt DateTime @default(now())
  projectId String?
  Project   Project? @relation(fields: [projectId], references: [id])
  member    Member   @relation(fields: [memberId], references: [id])
  memberId  Int
}
